$headings: 'h1, h2, h3, h4, h5, h6';

%contentOnly {
	padding: 0;
	border: 0;
	margin: 0;
}

%clearfix {
	*zoom: 1;
	&:before, &:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin apply-to-l-screens {
	@media screen and (min-width: $min-screen-width) {
		@content;
	}
}

@mixin apply-to-m-screens {
	@media screen and (max-width: $min-screen-width) {
		@content;
	}
}

@mixin apply-to-print {
	@media print {
		@content;
	}
}

@mixin anchor-styles($color) {
	a, a:link, a:hover, a:visited {
		border: 0;
		text-decoration: none;
		color: $color;
	}
}

@mixin background-image($img, $position, $repeat) {
	background: {
		image: url($img-folder + $img);
		position: $position;
		repeat: $repeat;
	}
}

@mixin background-linear-gradient($orientation, $start-color, $end-color) {
	$ieType: 1;
	$from: ();
	$to: ();

	@if $orientation == 'horizontal' {
		$from: ( 'moz': left, 'webkit-old': left top, 'webkit-new': left, 'opera': left, 'ms' : left, 'default' : to right );
		$to: ( 'webkit-old' : right top );
	}
	@else if $orientation == 'vertical' {
		$ieType: 0;
		$from: ( 'moz': top, 'webkit-old': left top, 'webkit-new': top, 'opera': top, 'ms' : top, 'default' : to bottom );
		$to: ( 'webkit-old' : left bottom );
	}
	@else if $orientation == 'diagonal-top' { // top left -> bottom right
		$from: ( 'moz': -45deg, 'webkit-old': left top, 'webkit-new': -45deg, 'opera': -45deg, 'ms' : -45deg, 'default' : 135deg );
		$to: ( 'webkit-old' : right bottom );
	}
	@else if $orientation == 'diagonal-bottom' { // bottom left -> top right
		$from: ( 'moz': 45deg, 'webkit-old': left bottom, 'webkit-new': 45deg, 'opera': 45deg, 'ms' : 45deg, 'default' : 45deg );
		$to: ( 'webkit-old' : right top );
	}

	background: $start-color; /* Old browsers */
	background: -moz-linear-gradient(map-get($from, 'moz'), $start-color 0%, $end-color 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, map-get($from, 'webkit-old'), map-get($to, 'webkit-old'), color-stop(0%,$start-color), color-stop(100%,$end-color)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(map-get($from, 'webkit-new'), $start-color 0%, $end-color 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(map-get($from, 'opera'), $start-color 0%, $end-color 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(map-get($from, 'ms'), $start-color 0%, $end-color 100%); /* IE10+ */
	background: linear-gradient(map-get($from, 'default'), $start-color 0%, $end-color 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start-color}', endColorstr='#{$end-color}', GradientType=$ieType); /* IE6-9 */
}

@mixin border-radius($radius:0) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

@mixin border-round() {
	@include border-radius(50%);
}

@mixin box-sizing($type) {
	-webkit-box-sizing: $type;
	-moz-box-sizing: $type;
	box-sizing: $type;
}

// $args: [hoffset voffset blur spread color]+
@mixin box-shadow($args...) {
	-webkit-box-shadow: $args;
	-moz-box-shadow: $args;
	box-shadow: $args;
}

@mixin flex-container($direction, $wrap, $flex-pack, $flex-align, $align-content, $align-items, $justify-content) {
	-webkit-align-content: $align-content;
	align-content: $align-content;
	-webkit-align-items: $align-items;
	align-items: $align-items;
	display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
	display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
	display: -ms-flexbox;      /* TWEENER - IE 10 */
	display: -webkit-flex;     /* NEW - Chrome */
	display: flex;             /* NEW, Spec - Opera 12.1, Firefox 20+ */
	-ms-flex-align: $flex-align;
	-webkit-flex-direction: $direction;
	-moz-flex-direction: $direction;
	-ms-flex-direction: $direction;
	flex-direction: $direction;
	-ms-flex-pack: $flex-pack;
	-webkit-flex-wrap: $wrap;
	-moz-flex-wrap: $wrap;
	-ms-flex-wrap: $wrap;
	flex-wrap: $wrap;
	-webkit-justify-content: $justify-content;
	-moz-justify-content: $justify-content;
	justify-content: $justify-content;
}

@mixin flex-item($align, $grow) {
	-webkit-align-self: $align;
	-ms-flex-item-align: $align;
	align-self: $align;
	-webkit-flex-grow: $grow;
	-moz-flex-grow: $grow;
	flex-grow: $grow;
}

@mixin opacity($value) {
	$value-ie: nth($value, 1) * 100;

	opacity: $value;
	filter: alpha(opacity=$value-ie); //IE8
}

@mixin transform($args...) {
	-webkit-transform: $args;
    -moz-transform: $args;
    -ms-transform: $args;
    -o-transform: $args;
    transform: $args;
}

// $args: [attrs, time, type]+
@mixin transition($args...) {
	-webkit-transition: $args;
	-moz-transition: $args;
    -o-transition: $args;
    transition: $args;
}

// $args: [attrs, time, type]+
@mixin -prefixed-transition($args...) {
	$webkit: ();
	$moz: ();
	$opera: ();

	@each $arg in $args {
		$webkit: append($webkit, -webkit- + $arg, comma);
		$moz: append($moz, -moz- + $arg, comma);
		$opera: append($opera, -o- + $arg, comma);
	}
	
	-webkit-transition: $webkit;
	-moz-transition: $moz;
    -o-transition: $opera;
    transition: $args;
}

@mixin user-select($value) {
	-webkit-touch-callout: $value;
	-webkit-user-select: $value;
	-khtml-user-select: $value;
	-moz-user-select: $value;
	-ms-user-select: $value;
	user-select: $value;
}
